{"version":3,"sources":["ajax.js","components/Search.js","components/EachStock.js","components/MyStocks.js","components/MainView.js","App.js","serviceWorker.js","index.js"],"names":["apiHost","apikey","ajax","fetchStockPrice","_fetchStockPrice","Object","asyncToGenerator","regenerator_default","a","mark","_callee","val","response","responseJson","wrap","_context","prev","next","fetch","sent","json","abrupt","t0","console","error","stop","_x","apply","this","arguments","fetchSearchStock","_fetchSearchStock","_callee2","_context2","_x2","Search","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","_ref","e","setState","searchStock","target","value","state","searchedStocks","data","slice","log","onAddButtonClick","stock","temp","onStockAdd","_this2","stocks","map","key","react_default","createElement","className","stockList","includes","href","disabled","onClick","type","placeholder","onChange","Component","EachStock","yahooLink","name","price","price_open","day_high","day_low","handleRemove","MyStocks","stockName","onStockRemove","myStock1s","components_EachStock","MainView","onStockAddHandler","concat","toConsumableArray","onStockRemoveHandler","currState","index","indexOf","splice","components_Search","components_MyStocks","myStocks","App","components_MainView","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b044fcc0.chunk.js","sourcesContent":["const apiHost = 'https://api.worldtradingdata.com/api/v1/';\r\nconst search = 'stock_search';\r\nconst quotePrice = 'stock';\r\nconst apikey =\r\n  'api_token=kyUmO7F6Euzgg5Q8V3768Z49T1fwtjKQ5GIFpIMDVdJLVwvOkN5aR1HCeX8J';\r\n// IsdX32acGoVARDNcEHAVClZRX0BNcuvrWeLSpy9is5Ipe9CP5J6Z8EnYFoL2\r\n// BMxa3DAbRA6UN72hRMCZb228oPGAO5IXO86RZcEB4dbktedzZUsfuBdSNNWQ\r\n// kyUmO7F6Euzgg5Q8V3768Z49T1fwtjKQ5GIFpIMDVdJLVwvOkN5aR1HCeX8J\r\nexport default {\r\n  async fetchStockPrice(val) {\r\n    try {\r\n      const response = await fetch(\r\n        apiHost + quotePrice + '?symbol=' + val + '&' + apikey\r\n      );\r\n      const responseJson = await response.json();\r\n      // console.log('In Ajax' + responseJson.data[0]['price']);\r\n      return responseJson;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  },\r\n  async fetchSearchStock(val) {\r\n    try {\r\n      const response = await fetch(\r\n        apiHost +\r\n          search +\r\n          '?' +\r\n          'search_term=' +\r\n          val +\r\n          '&' +\r\n          'search_by=symbol' +\r\n          '&' +\r\n          'sort_by=market_cap' +\r\n          '&' +\r\n          'sort_order=desc' +\r\n          '&' +\r\n          apikey\r\n      );\r\n      const responseJson = await response.json();\r\n      return responseJson;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport ajax from '../ajax';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchStock: '',\r\n      searchedStocks: []\r\n    };\r\n  }\r\n\r\n  handleChange = async e => {\r\n    this.setState(\r\n      {\r\n        searchStock: e.target.value\r\n      },\r\n      async () => {\r\n        if (this.state.searchStock) {\r\n          const value = await ajax.fetchSearchStock(this.state.searchStock);\r\n          if (value != null) {\r\n            this.setState({\r\n              searchedStocks: value.data.slice(0, 4)\r\n            });\r\n          } else {\r\n            console.log(value);\r\n          }\r\n        } else {\r\n          this.setState({\r\n            searchedStocks: null\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  onAddButtonClick = stock => {\r\n    var temp = stock;\r\n    this.props.onStockAdd(temp);\r\n  };\r\n\r\n  render() {\r\n    const stocks =\r\n      this.state.searchedStocks !== null\r\n        ? this.state.searchedStocks.map((stock, key) => (\r\n            <div className='card eachSuggestion' key={key}>\r\n              <div className='card-body'>\r\n                <h5 className='card-title'>{stock['symbol']}</h5>\r\n                <h6 className='card-subtitle mb-2 text-muted'>\r\n                  {stock['name']}\r\n                </h6>\r\n                <p className='card-text'>${stock['price']}</p>\r\n                {this.props.stockList.includes(stock['symbol']) ? (\r\n                  <button\r\n                    href='#'\r\n                    className='btn-outline-primary'\r\n                    disabled\r\n                    onClick={() => this.onAddButtonClick(stock['symbol'])}\r\n                  >\r\n                    Add\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    href='#'\r\n                    className='card-link addButton btn-primary btn-block'\r\n                    onClick={() => this.onAddButtonClick(stock['symbol'])}\r\n                  >\r\n                    Add\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))\r\n        : '';\r\n    return (\r\n      <div className='search'>\r\n        <div className='input-group input-group-lg'>\r\n          <input\r\n            type='search'\r\n            placeholder='Search by typing the Symbol (E.g. AAPL, MSFT, LYFT...)'\r\n            className='form-control input-group-lg searchBar'\r\n            value={this.state.searchStock}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className='suggestedStocks'>{stocks}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\n\r\nclass EachStock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stock: []\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const yahooLink = 'https://finance.yahoo.com/quote/' + this.props.stock;\r\n    return (\r\n      <div className='eachstock'>\r\n        {this.props.stock && (\r\n          <div className='card'>\r\n            <div className='card-body'>\r\n              <h5 className='card-title'>{this.props.stock}</h5>\r\n              <h6 className='card-subtitle mb-2 text-muted'>\r\n                {this.props.name}\r\n              </h6>\r\n              <p className='card-text'>{this.props.price}</p>\r\n              <ul className='list-group list-group-flush'>\r\n                <li className='list-group-item'>\r\n                  Open: {this.props.price_open}\r\n                </li>\r\n                <li className='list-group-item'>\r\n                  Day High: {this.props.day_high}\r\n                </li>\r\n                <li className='list-group-item'>\r\n                  Day Low: {this.props.day_low}\r\n                </li>\r\n              </ul>\r\n              <div className='link-div'>\r\n                <a href={yahooLink} className='card-link yahoo'>\r\n                  Yahoo Finance\r\n                </a>\r\n                <button\r\n                  onClick={() => this.props.handleRemove(this.props.stock)}\r\n                  className='card-link remove btn-danger'\r\n                >\r\n                  Remove\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EachStock;\r\n","import React, { Component } from 'react';\r\nimport EachStock from './EachStock';\r\n\r\nclass MyStocks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      myStock1s: []\r\n    };\r\n  }\r\n\r\n  handleRemove = stockName => {\r\n    this.props.onStockRemove(stockName);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='mystocks_div'>\r\n        {this.props.data && <h4 className='yourList'>Your List:</h4>}\r\n        <div className='mystocks'>\r\n          {this.props.data &&\r\n            this.props.data.map((stock, key) => (\r\n              <EachStock\r\n                stock={stock['symbol']}\r\n                name={stock['name']}\r\n                price_open={stock['price_open']}\r\n                price={stock['price']}\r\n                day_high={stock['day_high']}\r\n                day_low={stock['day_low']}\r\n                key={key}\r\n                handleRemove={this.handleRemove}\r\n              />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyStocks;\r\n","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport MyStocks from './MyStocks';\r\nimport ajax from '../ajax';\r\n\r\nclass MainView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stockList: [],\r\n      data: []\r\n    };\r\n  }\r\n\r\n  onStockAddHandler = stockName => {\r\n    this.setState(\r\n      {\r\n        stockList: [...this.state.stockList, stockName]\r\n      },\r\n      async () => {\r\n        const value = await ajax.fetchStockPrice(this.state.stockList);\r\n        this.setState({\r\n          data: value.data\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  onStockRemoveHandler = stockName => {\r\n    const currState = [...this.state.stockList];\r\n    var index = this.state.stockList.indexOf(stockName);\r\n    if (index !== -1) {\r\n      currState.splice(index, 1);\r\n      this.setState(\r\n        {\r\n          stockList: currState\r\n        },\r\n        async () => {\r\n          const value = await ajax.fetchStockPrice(this.state.stockList);\r\n          this.setState({\r\n            data: value.data\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='mainview container'>\r\n        <Search\r\n          onStockAdd={this.onStockAddHandler}\r\n          stockList={this.state.stockList}\r\n          onStockRemove={this.onStockRemoveHandler}\r\n        />\r\n        <MyStocks\r\n          onStockRemove={this.onStockRemoveHandler}\r\n          data={this.state.data}\r\n          myStocks={this.state.stockList}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainView;\r\n","import React from 'react';\nimport './App.css';\nimport MainView from './components/MainView';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <MainView />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}